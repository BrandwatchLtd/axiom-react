@import '../../core/mixins';

///
$_scheme:  false;

@mixin for-each-scheme {
  @each $scheme in $schemes {
    $_scheme: $scheme !global;
    $class: map-get($scheme, class);

    @at-root {
      .#{$class} #{&} {
        @content
      }
    }
  }

  $_scheme: false !global;
}

///
@function scheme-prop($prop, $scheme: $_scheme) {
  @if (has-scheme-prop($prop, $scheme)) {
    @return map-get($scheme, $prop);
  } @else {
    @error "Scheme property `#{$prop}` does not exists";
    @return false;
  }
}

///
@function has-scheme-prop($prop, $scheme: $_scheme) {
  @return map-has-key($scheme, $prop);
}

///
@function scheme-text-color($color, $scheme: $_scheme) {
  $light-color: scheme-prop(text-color-light);
  $dark-color:  scheme-prop(text-color-dark);

  @if ($color == transparent) {
    @return inherit;
  }

  @return get-contrasting-color(get-color($color), $light-color, $dark-color);
}
