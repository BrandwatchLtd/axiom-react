@import '../core/mixins';
@import './_mixins/scheme';
@import './_mixins/typography';


// sass-lint:disable no-vendor-prefixes

html,
body {
  font-family: $font-family-body;
  font-size: $font-size-base;
  line-height: $line-height;
  -webkit-font-smoothing: antialiased;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-font-feature-settings: 'kern' 1;
  -moz-font-feature-settings: 'kern' 1;
}

// sass-lint:enable no-vendor-prefixes

h1,
h2,
h3,
h4,
h5 {
  line-height: $line-height-dyn;
}

h1,
h2,
h3,
h4,
h5,
p,
ul,
ol {
  &:first-child { margin-top: 0; }
  &:last-child  { margin-bottom: 0; }

  //
  &.ax-text--no-space {
    margin-top: 0;
    margin-bottom: 0;
  }
}


h1 { @include heading(h1) }
h2 { @include heading(h2) }
h3 { @include heading(h3) }
h4 { @include heading(h4) }
h5 { @include heading(h5) }

h1 {
  margin: $spacing-base 0;
}

h2,
h3,
h4,
h5 {
  margin: $spacing-base 0 $spacing-sm;
}

ul,
ol,
p {
  margin: $spacing-base 0;
}


// Misc
blockquote {
  margin: $spacing-xl;
}

strong,
.ax-text--bold {
  font-weight: $font-weight-strong;
}

.ax-text--weak {
  font-weight: $font-weight-weak;
}

small {
  // font-size: floor((100% * $font-size-sm / $font-size-base));
}


// Links
a {
  position: relative;
  color: inherit;
  font-style: inherit;
  text-decoration: inherit;

  &:hover {
    color: inherit;
    text-decoration: inherit;
    cursor: pointer;
  }
}


// sass-lint:disable no-qualifying-elements
a.ax-link {
  // Color links but this will need to be
  // suppressed for things like menu.
  @include for-each-scheme {
    &:not(.ax-link--inherit-color) {
      color: get-color(scheme-prop(primary));

      &:hover {
        color: get-color(scheme-prop(primary), 600);
      }
    }
  }

  // Underline for main links but this will need to be
  // suppressed for things like menu links and icons.
  &:not(.ax-link--no-decoration) {
    &:hover {
      text-decoration: underline;
    }
  }
}
// sass-lint:enable no-qualifying-elements


// Alignment Modifiers
.ax-text--left { text-align: left; }
.ax-text--center { text-align: center; }
.ax-text--right { text-align: right; }

@include for-each-breakpoint {
  @include screen-more-than {
    .ax-text--left--#{breakpoint-prop(id)} { text-align: left; }
    .ax-text--center--#{breakpoint-prop(id)} { text-align: center; }
    .ax-text--right--#{breakpoint-prop(id)} { text-align: right; }
  }
}


// Case Modifiers
.ax-text--uppercase   { text-transform: uppercase; }
.ax-text--capitalize  { text-transform: capitalize; }
.ax-text--lowercase   { text-transform: lowercase; }


// Breaking
.ax-text--break-none { white-space: nowrap; }
.ax-text--break-all  { white-space: initial; word-break: break-all; }
.ax-text--break-word { white-space: initial; word-wrap: break-word; }


// Color variations
@include for-each-color {
  .ax-text--#{color-prop(name)} {
    color: get-color(color-prop(color), 500);
  }
}

@include for-each-scheme {
  .ax-text--primary {
    color: get-color(scheme-prop(primary), 500);
  }
}


//
.ax-text--ellipsis {
  display: block;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}


// List styling
// sass-lint:disable no-qualifying-elements

.ax-list {
  @include space-block();
}

.ax-list--inline,
.ax-list--inline {
  display: flex;
  flex-wrap: wrap;

  &--start  { justify-content: flex-start; }
  &--center { justify-content: center; }
  &--end    { justify-content: flex-end; }

  > li {
    padding: 0 $spacing-sm 0 0;

    &::after {
      margin: 0 0 0 $spacing-sm;
      content: '|';
    }

    &:last-child {
      padding-right: 0;

      &::after {
        margin-left: 0;
        content: '';
      }
    }
  }
}

// sass-lint:enable no-qualifying-elements
