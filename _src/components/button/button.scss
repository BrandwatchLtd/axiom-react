@import '../../design-patterns/animations/mixins';
@import '../../design-patterns/animations/_vars.js';
@import '../../design-patterns/colors/mixins';
@import '../../design-patterns/layout/mixins';
@import '../../design-patterns/spacing/_vars.js';
@import '../../design-patterns/spacing/mixins';
@import '../typography/_vars.js';
@import '../button/_vars.js';

$button-padding-v-sm: 0;
$button-padding-h-sm: $component-padding-h-sm;
$button-font-size-sm: $font-size-sm;

$button-padding-v-md: $component-padding-v-sm;
$button-padding-h-md: $component-padding-h-sm;
$button-font-size-md: $font-size-md;

$button-padding-v-lg: $component-padding-v-base;
$button-padding-h-lg: $component-padding-h-base;
$button-font-size-lg: $font-size-base;

// Button: Core
button {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  background: none;
}

.ax-button {
  @include space-inline($component-margin-h-sm);
  @include transition((background-color, border-color, color), $transition-time-fast);

  display: inline-block;
  position: relative;
  border-width: $button-border-width;
  border-style: solid;
  border-radius: $button-border-radius;
  border-color: transparent;
  background-color: transparent;
  font-weight: $font-weight-strong;
  text-align: center;
  cursor: pointer;
  vertical-align: middle;

  &:hover {
    cursor: pointer;
  }

  &[disabled],
  &[disabled]:hover,
  &[disabled]:active {
    cursor: default;
  }
}


// Button: sizes
.ax-button--sm {
  padding: $button-padding-v-sm $button-padding-h-sm;
  font-size: $button-font-size-sm;
}

.ax-button--md {
  padding: $button-padding-v-md $button-padding-h-md;
  font-size: $button-font-size-md;
}

.ax-button--lg {
  padding: $button-padding-v-lg $button-padding-h-lg;
  font-size: $button-font-size-lg;
}


// Button: Full width
@mixin button-full-width {
  @include space-block($component-margin-v-sm);

  display: block;
  width: 100%;
}

.ax-button--full {
  @include button-full-width;
}

@include for-each-breakpoint {
  @include screen-less-than {
    .ax-button--full--#{breakpoint-prop(id)} {
      @include button-full-width;
    }
  }
}


// Button: Coloured
@mixin button-color-filled($color) {
  border-color: get-color($color, 500);
  background-color: get-color($color, 400);
  color: get-text-color(get-color($color, 400));

  &:hover {
    border-color: get-color($color, 600);
    background-color: get-color($color, 500);
    color: get-text-color(get-color($color, 500));
  }

  &:active,
  &.active {
    border-color: get-color($color, 700);
    background-color: get-color($color, 600);
    color: get-text-color(get-color($color, 600));
  }

  &[disabled],
  &[disabled]:hover,
  &[disabled]:active {
    border-color: get-color($color, 100);
    background-color: get-color($color, 50);
    color: get-color($color, 100);
  }
}

@mixin button-color-outlined($color) {
  border-color: get-color($color, 500);
  color: get-color($color, 500);

  &:hover {
    border-color: get-color($color, 600);
    color: get-color($color, 600);
  }

  &:active,
  &.active {
    border-color: get-color($color, 700);
    background-color: get-color($color, 600);
    color: get-text-color(get-color($color, 600));
  }

  &[disabled],
  &[disabled]:hover,
  &[disabled]:active {
    border-color: get-color($color, 100);
    color: get-color($color, 100);
  }
}

@include for-each-color {
  .ax-button--#{color-prop(name)} {
    &:not(.ax-button--outlined) {
      @include button-color-filled(color-prop(color));
    }

    &.ax-button--outlined {
      @include button-color-outlined(color-prop(color));
    }
  }
}

.ax-button--primary {
  &:not(.ax-button--outlined) {
    @include button-color-filled($color-accent);
  }

  &.ax-button--outlined {
    @include button-color-outlined($color-accent);
  }
}


// Button: Circular
.ax-button--circular {
  padding: 0;
  border-radius: 50%;

  &.ax-button--sm {
    width: $line-height + ($button-padding-v-sm * 2);
    height: $line-height + ($button-padding-v-sm * 2);
  }

  &.ax-button--md {
    width: $line-height + ($button-padding-v-md * 2);
    height: $line-height + ($button-padding-v-md * 2);
  }

  &.ax-button--lg {
    width: $line-height + ($button-padding-v-lg * 2);
    height: $line-height + ($button-padding-v-lg * 2);
  }
}


// Button: Icon
.ax-button__icon {
  margin-right: $component-margin-h-sm;
}
