@import '../../design-patterns/layout/mixins';
@import '../../design-patterns/layout/vars';
@import '../../design-patterns/spacing/vars';
@import '../grid/mixins';


// Grid: Base
.ax-grid {
  display: flex;
  flex-wrap: wrap;
}


// Grid Cell: Base
.ax-grid__cell {
  flex: 1 1 0%;
  min-width: 0;
}


// Grid: Vertical alignment
.ax-grid--v-start  { align-items: flex-start; }
.ax-grid--v-middle { align-items: center; }
.ax-grid--v-end    { align-items: flex-end; }


// Grid: Horizontal alignment
.ax-grid--h-start    { justify-content: flex-start; }
.ax-grid--h-middle   { justify-content: center; }
.ax-grid--h-end      { justify-content: flex-end; }
.ax-grid--h-around   { justify-content: space-around; }
.ax-grid--h-between  { justify-content: space-between; }


// Grid Cell: Vertical alignment
.ax-grid__cell--start  { align-self: flex-start; }
.ax-grid__cell--middle { align-self: center; }
.ax-grid__cell--end    { align-self: flex-end; }


// Grid: Gutter sizing
.ax-grid--gutters--small  { @include grid-gutter($spacing-grid-size * 4); }
.ax-grid--gutters--medium { @include grid-gutter($spacing-grid-size * 6); }
.ax-grid--gutters--large  { @include grid-gutter($spacing-grid-size * 8); }


// Create the grid sizing classes to span all breakpoints
@include make-responsive-grid(false);

// Create the responsive grid
@include for-each-breakpoint {
  @include make-responsive-grid(true);
}

// Grid Cell: Sizing
// When below the lowest given breakpoint cells
// will flex to 100%. Can be suppressed with with the
// --unresponsive modifier.
@include screen-less-than($layout-width-sm) {
  .ax-grid {
    &:not(.ax-grid--unresponsive) {
      > .ax-grid__cell {
        flex: 0 0 100%;
      }
    }
  }
}
