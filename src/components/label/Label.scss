@import '../../design-patterns/colors/mixins';
@import '../../design-patterns/layout/mixins';
@import '../../design-patterns/layout/_vars.js';
@import '../../design-patterns/spacing/mixins';
@import '../../design-patterns/spacing/_vars.js';
@import '../label/_vars.js';
@import '../typography/_vars.js';

// Label: Base
.ax-label {
  @include space-inline();

  display: inline-block;
  position: relative;
  border-width: $component-border-width;
  border-style: solid;
  border-radius: $component-border-radius;
  border-color: transparent;
  background-color: transparent;
  font-weight: $font-weight-strong;
  text-align: center;
  vertical-align: middle;
}

// Label: Sizing
@each $label-size in $label-sizes {
  .ax-label--#{map-get($label-size, id)} {
    padding: map-get($label-size, padding-v) map-get($label-size, padding-h);
    font-size: map-get($label-size, font-size);
  }
}


// Label: Full width
@mixin label-full-width {
  @include space-block();

  display: block;
  width: 100%;
}

.ax-label--full {
  @include label-full-width;
}

@include for-each-breakpoint {
  @include screen-less-than {
    .ax-label--full--#{breakpoint-prop(id)} {
      @include label-full-width;
    }
  }
}

@each $label-color in $label-colors {
  .ax-label--#{map-get($label-color, id)} {
    border-color: map-get($label-color, color);
    background-color: map-get($label-color, color);
    color: get-text-color(map-get($label-color, color));
  }
}
